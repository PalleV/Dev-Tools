#
# Cvt Package configuration file
# More info at https://github.com/DrorHarari/keypirinha-cvt/
#

[main]
# Plugin's main configuration section.

# Troubleshooting conversions (useful when trying to customize)
#debug = false

# Cvt can work with numbers formatted according the active locale. The options are:
# decimal_separator = 
#   * dot
#     The is the default, locale is ignored. The decimal separator is a period and
#     no thousands separator is used.
#   * comma
#     Decimal separator of comma is used for input and clipboard output. Thousands
#     are separated with a space.
#   * auto
#     Use the Windows regional settings for the decimal separator and thousands
#	  separator (only dot and commas are supported on input). When copying
#     the result to the clipboard, no thousands separator is produced, just the 
#     decimal separator.
#
#decimal_separator=dot

# Adding custom measurements and units
#
# Cvt uses a built-in measurement definition file called cvtdefs.json
# You obtain a copy in the User folder by entering the "Cvt: Customize
# coversions" action in the Keypirinha box. You can customize this file
# and as long as it exists, Cvt will use it rather than the built-in 
# one. 
# 
# The recommended way to customize measurements is to add a 'definitions'
# item in the main section pointing to a conversion definition file to
# load. Note that conversion definitions loaded via this 'definition'
# item are added to the existing definition, they are not replacing them.
#
# The Reload command is added for convenience to update the measurements
# when the definition was changed outside.
#
# definitions=
#	custom-file-1.json
#	custom-file-2.json

# Adding a custom measure is possible by adding a section to this file in the 
# following format:
#
# [measure/{measure name}]
# desc = {short-description of the measure}
[measure/Fucks]
desc = Convert units of fucks

[measure/Frequency]
desc = Convert units of frequency

[measure/Numbers]
desc = Convert units of large numbers
# Adding a custom unit to existing measurement is possible by adding a section to 
# this file in the following format:
#
# [unit/{measure name}/{unit name}]
# factor = {expression to multiple the main unit by to get this unit}
# aliases = {comma separate additional aliases}
# offset = {number to substract after multiplying by factor}
# inverse = {if true use the inverse of the factor}
#
# To add a "Finger" distance unit which is equivalent to 2 cm with the alias 
# 'fg' we can use the following definition (note that for Distance, the main 
# unit is meter as can be seen by typing DISTANCE+<tab> in Keypirinha)
#
#[unit/Distance/Finger]
#factor = 2/100
#aliases = fg

#extensions start
[unit/Speed/Nautical Miles per hour]
factor = 1.9438444924406
aliases = nmph

[unit/Speed/Mach]
factor = 343
aliases = mach

[unit/Speed/Speed of Light]
factor = 299792458
aliases = lightspeed,light speed,lysets hastighed

[unit/Time/Fortnite]
factor = 1209600
aliases = fn

[unit/Distance/Astronomical Unit]
factor = 149597870700
aliases = au,astronomical,astronomical unit

[unit/Distance/Earth Circumference]
factor = 40075000
aliases = around earth,rundt om jorden,jordens omkreds,earth circumference

[unit/Distance/A4 Sheets (Horizontal)]
factor = 0.297
aliases = a4

[unit/Distance/Moon]
factor = 384400000
aliases = distance to moon

[unit/Distance/Sun]
factor = 149600000000
aliases = distance to sun

[unit/Area/Football Fields]
factor = 7140
aliases = fodbold bane,fodboldbane,football field, footballfield,fodbold baner, fodboldbaner,football fields, footballfields
#extensions end

#Fucks start
[unit/Fucks/Buttload]
factor = 1/1000
aliases = bl,buttload,buttloads

[unit/Fucks/Butt ton]
factor = 1/100
aliases = bt,buttton,butt ton

[unit/Fucks/Assload]
factor = 1/10
aliases = al,assload,assloads

[unit/Fucks/Shitload]
factor = 1/1
aliases = sl,shitload,shit load,shitloads,shit loads

[unit/Fucks/Shitton]
factor = 10
aliases = st,shitton,shit ton

[unit/Fucks/Fuckload]
factor = 100
aliases = fl,fuckload, fuck load

[unit/Fucks/Fuckton]
factor = 1000
aliases = ft,fuckton, fuck ton
#fucks end

#Frequency start
[unit/Frequency/Hertz]
factor = 1
aliases = hz,hertz

[unit/Frequency/Beats per minute]
factor = 1/60
aliases = bpm,beats per minute,beats pr min

[unit/Frequency/Kilohertz]
factor = 1000
aliases = khz,kilo hertz,kilohertz

[unit/Frequency/Megahertz]
factor = 1000000
aliases = mhz,mega hertz,megahertz

[unit/Frequency/Gigahertz]
factor = 1000000000
aliases = ghz,giga hertz,gigahertz

[unit/Frequency/Terahertz]
factor = 1000000000000
aliases = thz,tera hertz,terahertz

[unit/Frequency/Petahertz]
factor = 1000000000000
aliases = phz,peta hertz,petahertz
#Frequency end

#numbers start
[unit/Numbers/Million]
factor = 1
aliases = mio,million,millioner

[unit/Numbers/Milliard]
factor = 1000
aliases = mia,milliard,milliarder

[unit/Numbers/Billion]
factor = 1000000
aliases = bio,billion,billioner

[unit/Numbers/Billiard]
factor = 1000000000
aliases = bia,billiard,billiarder

[unit/Numbers/Trillion]
factor = 1000000000000
aliases = tril,trillion,trillioner

[unit/Numbers/Quadrillion]
factor = 1000000000000000
aliases = quadr,quadrillion,quadrillioner

[unit/Numbers/Quintillion]
factor = 1000000000000000000
aliases = quint,quintillion,quintillioner,kvintillion

[unit/Numbers/Sextillion]
factor = 1000000000000000000000
aliases = sext,sextillion,sextillioner,sekstillion

[unit/Numbers/Septillion]
factor = 1000000000000000000000000
aliases = sept,septillion,septillioner

[unit/Numbers/Octillion]
factor = 1000000000000000000000000000
aliases = oct,octillion,octillioner

[unit/Numbers/Nonillion]
factor = 1000000000000000000000000000000
aliases = non,nonillion,nonillioner

[unit/Numbers/Decillion]
factor = 1000000000000000000000000000000000
aliases = decillion,decillioner
#numbers end

#
# To add an alias "hdm" for Centimeters unit of distance measure use the
# following (note that the unit must be specified with exdact case):
#
#[unit/distance/Centimetres]
#aliases = hdm

[unit/Power/Horsepower (metric)]
aliases = hp

[unit/Speed/Kilometres per hour]
aliases = kmt,km/t

[var]
# As in every Keypirinha's configuration file, you may optionally include a
# [var] section to declare variables that you want to reuse anywhere else in
# this file.
#
# Note that the [var] section is inherited, which means that any value defined
# in the main configuration file (i.e. this file) will be propagated to
# subsequently loaded configuration files (packages' configuration files).
#
